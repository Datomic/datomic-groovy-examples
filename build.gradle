apply plugin: 'eclipse'
// apply plugin: 'groovy'
apply plugin: 'application'

repositories {
  mavenCentral()
  maven { url "http://clojars.org/repo" }
}

dependencies {
  compile group: "com.datomic", name: "datomic-free", version: "0.8.4260" 

  // groovy-all + groovy shell broken in many early 2.x builds
  // will be fixed in 2.1.9 and 2.2.1, see http://jira.codehaus.org/browse/GROOVY-6426
  compile group: "org.codehaus.groovy", name: "groovy-all", version: "1.8.9" 

  // extra dependencies needed to make groovysh happy, would be nice
  // if these were declared as maven coordinates somewhere
  compile group: "org.fusesource.jansi", name: "jansi", version: "1.11"             
  compile group: "commons-cli", name: "commons-cli", version: "1.2"             
  compile group: "jline", name: "jline", version: "0.9.9"             
}

task(console, dependsOn: 'classes', type: JavaExec) {
  main = 'groovy.ui.Console'
  classpath = sourceSets.main.runtimeClasspath
}

task(shell, dependsOn: 'classes', type: JavaExec) {
    main = 'org.codehaus.groovy.tools.shell.Main'
    classpath = sourceSets.main.compileClasspath
    // this is a hack, gradle doesn't expect to launch interactive code
    // see http://forums.gradle.org/gradle/topics/running_groovy_shell_from_gradle_task
    standardInput = System.in 
}

// Generate classpath to launch shell outside gradle.
// See bin/* scripts.
task(classpath) {
    println sourceSets.main.runtimeClasspath.asPath
}




